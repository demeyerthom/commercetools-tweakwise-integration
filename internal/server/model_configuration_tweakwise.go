/*
 * Commercetools Tweakwise Integration
 *
 * A service built for managing the Commercetools to Tweakwise integration
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

type ConfigurationTweakwise struct {

	// The tweakwise token
	Token string `json:"token"`

	// The tweakwise instance key
	Instance string `json:"instance"`
}

// AssertConfigurationTweakwiseRequired checks if the required fields are not zero-ed
func AssertConfigurationTweakwiseRequired(obj ConfigurationTweakwise) error {
	elements := map[string]interface{}{
		"token":    obj.Token,
		"instance": obj.Instance,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseConfigurationTweakwiseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ConfigurationTweakwise (e.g. [][]ConfigurationTweakwise), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseConfigurationTweakwiseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aConfigurationTweakwise, ok := obj.(ConfigurationTweakwise)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertConfigurationTweakwiseRequired(aConfigurationTweakwise)
	})
}
