/*
 * Commercetools Tweakwise Integration
 *
 * A service built for managing the Commercetools to Tweakwise integration
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

type Source struct {
	Type string `json:"type"`
}

// AssertSourceRequired checks if the required fields are not zero-ed
func AssertSourceRequired(obj Source) error {
	elements := map[string]interface{}{
		"type": obj.Type,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseSourceRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Source (e.g. [][]Source), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSourceRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSource, ok := obj.(Source)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSourceRequired(aSource)
	})
}
